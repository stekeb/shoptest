name: PoC CI/CD

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      REPO_NAME: my-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
            | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

      - name: Build & Push Docker image (latest + sha)
        run: |
          IMAGE_REPO="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME"
          IMAGE_TAG="${{ github.sha }}"
          docker build -t "$IMAGE_REPO:$IMAGE_TAG" -t "$IMAGE_REPO:latest" .
          docker push "$IMAGE_REPO:$IMAGE_TAG"
          docker push "$IMAGE_REPO:latest"

      # Deployment: funktioniert, sobald der App Runner Service einmal existiert
      - name: Deploy to App Runner
        if: ${{ secrets.AWS_APPRUNNER_SERVICE_ARN != '' }}
        run: |
          IMAGE_REPO="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME"
          aws apprunner update-service \
            --service-arn "${{ secrets.AWS_APPRUNNER_SERVICE_ARN }}" \
            --source-configuration "ImageRepository={ImageIdentifier=$IMAGE_REPO:latest,ImageRepositoryType=ECR}"
